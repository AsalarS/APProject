<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAACMuAAAjLgAAAAAAAAAA
        AACDQTwAg0E8AINBPCODQTxwg0E8nYNBPKWDQTylg0E8p4NBPE2DQTwAAAAAAAAAAAAAAAAAg0E8AINB
        PACDQTxVg0E8VoNBPACDQTwAAAAAAAAAAAAAAAAAg0E8AINBPE2DQTyng0E8pYNBPKWDQTycg0E8b4NB
        PCKDQTwAg0E8AINBPACDQTxKg0E80YNBPPyDQTz/g0E8/4NBPP+DQTz/g0E8qYNBPESDQTxGg0E8RoNB
        PEaDQTxGg0E8RoNBPLqDQTy8g0E8S4NBPEqDQTxGg0E8RoNBPEaDQTxEg0E8qYNBPP+DQTz/g0E8/4NB
        PP+DQTz8g0E80INBPEiDQTwAg0E8OYNBPN2DQTz/g0E8/4NBPP+DQTz/g0E8/4NBPP+DQTyUg0E8IINB
        PCODQTwjg0E8I4NBPCODQTwig0E8qYNBPKyDQTwog0E8J4NBPCODQTwjg0E8I4NBPCGDQTyWg0E8/4NB
        PP+DQTz/g0E8/4NBPP+DQTz/g0E83INBPDiDQTyng0E8/4NBPP+DQTz/g0E8/4NBPP+DQTz/g0E8/4NB
        PHWDQTwAAAAAAAAAAAAAAAAAg0E8AINBPACDQTyUg0E8lINBPACDQTwAAAAAAAAAAACDQTwAg0E8AINB
        PHqDQTz/g0E8/4NBPP+DQTz/g0E8/4NBPP+DQTz/g0E8pYNBPOGDQTz/g0E8/4NBPP+DQTz/g0E8/4NB
        PP+DQTzVg0E8K4NBPAAAAAAAAAAAAAAAAACDQTwAg0E8AINBPJSDQTyUg0E8AINBPAAAAAAAAAAAAAAA
        AACDQTwAg0E8K4NBPNaDQTz/g0E8/4NBPP+DQTz/g0E8/4NBPP+DQTzhg0E87YNBPP+DQTz/g0E8/4NB
        PP+DQTz/g0E87INBPE2DQTwAg0E8AAAAAAAAAAAAAAAAAINBPACDQTwAg0E8loNBPJaDQTwAg0E8AAAA
        AAAAAAAAAAAAAINBPACDQTwAg0E8ToNBPOyDQTz/g0E8/4NBPP+DQTz/g0E8/4NBPO2DQTztg0E8/4NB
        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
        PP+DQTz/g0E8/4NBPP+DQTz/g0E8/4NBPJSDQTwAg0E8AINBPEODQTz3g0E8/4NBPHaDQTw+g0E894NB
        PP+DQTz/g0E8/4NBPP+DQTz/g0E8/4NBPP+DQTz/g0E8/4NBPP+DQTzqg0E80YNBPP+DQTz/g0E8/4NB
        PP+DQTz/g0E8/4NBPP+DQTz/g0E8/4NBPP+DQTz/g0E8lINBPACDQTwAg0E8Q4NBPPeDQTz/g0E8doNB
        PD6DQTz3g0E8/4NBPP+DQTz/g0E8/4NBPP+DQTz/g0E8/4NBPP+DQTz/g0E8/4NBPM6DQTx7g0E8+4NB
        PP+DQTz/g0E8/4NBPP+DQTz/g0E8/4NBPP+DQTz/g0E8/4NBPPqDQTxyg0E8AINBPACDQTwug0E84INB
        PP+DQTx2g0E8PoNBPPeDQTz/g0E8/4NBPP+DQTz/g0E8/4NBPP+DQTz/g0E8/4NBPP+DQTz6g0E8eINB
        PBSDQTyng0E8/oNBPP+DQTz/g0E8/4NBPP+DQTz/g0E8/4NBPP+DQTz/g0E8nINBPAqDQTwAg0E8AINB
        PACDQTxWg0E89oNBPHeDQTw+g0E894NBPP+DQTz/g0E8/4NBPP+DQTz/g0E8/4NBPP+DQTz/g0E8/oNB
        PKeDQTwTg0E8AINBPBWDQTyJg0E874NBPP+DQTz/g0E8/4NBPP+DQTz/g0E8/4NBPPWDQTxBg0E8AAAA
        AAAAAAAAg0E8AINBPA2DQTzEg0E8coNBPDmDQTzzg0E8/4NBPP+DQTz/g0E8/4NBPP+DQTz/g0E8/4NB
        PO+DQTyIg0E8FYNBPAAAAAAAg0E8AINBPASDQTxJg0E8x4NBPP6DQTz/g0E8/4NBPP+DQTz/g0E88INB
        PDODQTwAg0E8AoNBPAODQTwAg0E8CINBPIGDQTwkg0E8CYNBPKGDQTz/g0E8/4NBPP+DQTz/g0E8/4NB
        PP6DQTzGg0E8SINBPASDQTwAAAAAAAAAAAAAAAAAg0E8AINBPACDQTwZg0E8iYNBPO6DQTz/g0E8/4NB
        PP+DQTz7g0E8W4NBPACDQTwYg0E8NYNBPACDQTwhg0E8hYNBPAaDQTwAg0E8dINBPP+DQTz/g0E8/4NB
        PP+DQTzug0E8iINBPBmDQTwAg0E8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAINBPACDQTwEg0E8SINB
        PMaDQTz+g0E8/4NBPP+DQTzKg0E8KYNBPCSDQTxMg0E8C4NBPJGDQTy9g0E8CoNBPACDQTyKg0E8/4NB
        PP+DQTz+g0E8xoNBPEeDQTwEg0E8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAINB
        PACDQTwAg0E8GYNBPIiDQTzug0E8/4NBPP+DQTzXg0E8uYNBPMqDQTy+g0E8+oNBPPGDQTylg0E8moNB
        POCDQTz/g0E87oNBPIiDQTwZg0E8AINBPAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAACDQTwAg0E8BINBPEeDQTzGg0E8/oNBPP+DQTz/g0E8/4NBPP+DQTz/g0E8/4NB
        PP+DQTz/g0E8/oNBPMaDQTxHg0E8BINBPAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACDQTwAg0E8AINBPBmDQTyIg0E87oNBPP+DQTz/g0E8/4NB
        PP+DQTz/g0E8/4NBPO6DQTyIg0E8GYNBPACDQTwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAg0E8AINBPASDQTxHg0E8woNB
        PPqDQTz/g0E8/4NBPPqDQTzBg0E8RoNBPAODQTwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAg0E8AINB
        PACDQTwZg0E8Z4NBPJ+DQTyfg0E8Z4NBPBiDQTwAg0E8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAwH5+A4AAAAEAAAAAAH5+AAB+fgAA/n8AAPw/AAGcOYADHDjABjAMYARg
        BiAEQAIgBAAAIAQCMCAEBjAgBAYwIAQGMCAEBgAgAAYAAAAGAAAABgAAAAYAAAAHAACADwABwAkAA/AJ
        EA/4ABAf/gAAf/8AAP//wAP//+AH///4H/8=
</value>
  </data>
</root>